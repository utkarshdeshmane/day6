name: Deploy Flask App to EC2

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run tests
        run: |
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << 'EOF'
            # Install dependencies if missing
            sudo apt update && sudo apt install -y python3-pip python3-venv git

            # Clone repo if not present
            if [ ! -d "/home/ubuntu/my-flask-app/.git" ]; then
              git clone https://github.com/utkarshdeshmane/day6.git /home/ubuntu/my-flask-app
            fi

            cd /home/ubuntu/my-flask-app
            git pull origin main

            # Set up virtual environment
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi

            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # Create systemd service file
            sudo tee /etc/systemd/system/my-flask-app.service > /dev/null <<EOT
            [Unit]
            Description=Gunicorn instance to serve Flask app
            After=network.target

            [Service]
            User=ubuntu
            Group=www-data
            WorkingDirectory=/home/ubuntu/my-flask-app
            Environment="PATH=/home/ubuntu/my-flask-app/venv/bin"
            ExecStart=/home/ubuntu/my-flask-app/venv/bin/gunicorn -w 4 -b 0.0.0.0:8000 app:app

            [Install]
            WantedBy=multi-user.target
            EOT

            sudo systemctl daemon-reload
            sudo systemctl enable my-flask-app
            sudo systemctl restart my-flask-app
          EOF
