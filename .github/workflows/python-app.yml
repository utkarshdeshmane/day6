name: Deploy Flask App with Docker and EC2

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t utkarshdeshmane/flask-app:latest .
          docker push utkarshdeshmane/flask-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          # Save private key and set permissions
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > private_key.pem
          chmod 600 private_key.pem

          # Connect to EC2 and deploy
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << 'EOF'

          # Update system and install dependencies if missing
          sudo apt update && sudo apt install -y docker.io docker-compose nginx

          # Restart Docker service if necessary
          sudo systemctl restart docker || true

          # Pull the latest image from Docker Hub
          sudo docker pull utkarshdeshmane/flask-app:latest

          # Stop and remove any running containers
          sudo docker-compose -f /home/ubuntu/my-flask-app/docker-compose.yml down || true

          # Ensure correct permissions for docker-compose.yml
          sudo chown ubuntu:ubuntu /home/ubuntu/my-flask-app/docker-compose.yml

          # Start new containers with Docker Compose
          cd /home/ubuntu/my-flask-app
          sudo docker-compose -f docker-compose.yml up -d --build

          # Clean up old Docker images
          sudo docker system prune -f

          EOF
